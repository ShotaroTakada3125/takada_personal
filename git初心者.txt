・gitは3階層
    0.リモートリポジトリ→クローン
    ↑プッシュ↓プル
    1.ローカルリポジトリ
    ↑コミット
    2.インデックス
    ↑ステージング
    3.ワークツリー

・ステージングの分ける基準
    基本はタスク単位
    元に戻す時のことを考える

・タグを使う
    特定のコミットにつけられる名前
    それをヒントに、履歴を辿ったり、戻したりする
    英数字でつける
    バージョン番号なども可能

・ブランチを分けるタイミング
    リリースまでに時間がかかりそうな作業
    実験的な作業
    全体的に大きな影響を与えそうな作業

・mergeとrebase
    ・merge
        履歴として残しておきたい大きな変更
    ・rebase
        ちょっとした変更の時
    ・cherry-pick
        ブランチ同士の変更のやり取りはcherry-pick

・gitは、分散型バージョン管理である
    各個人が保管場所を所持
    共有したいブランチやタグを選んでプッシュ
    ロックがかからない
    お互い上書き（コンフリクト）は起こる

・gitコマンド
    ・リポジトリの作成およびメンテナンスに
        ・git init：リポジトリの作成
        ・git clone：既存のリポジトリの複製
        ・git fsck：リポジトリの正当性チェック
        ・git gc：不要なオブジェクトを削除し、最適化を行う
    ・作業ツリーやブランチを操作・管理
        ・git status:変更が加えられたあファイルを表示
        ・git diff:ファイルに加えられた変更点をdiff形式で表示
        ・git add:コミットするファイルを指定
        ・git commit:変更点をコミット
        ・git log:コミットログを閲覧
        ・git reset:直前のコミットを取り消す